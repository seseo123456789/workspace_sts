<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="adminMapper">

        <resultMap id="resultImg" type="com.green.shop.item.vo.ImgVo">
            <result column="IMG_CODE"                 property="imgCode"/>
            <result column="ORIGIN_FILE_NAME"         property="originFileName"/>
            <result column="ATTACHED_FILE_NAME"       property="attachedFileName"/>
            <result column="IS_MAIN"                  property="isMain"/>
            <result column="ITEM_CODE"                property="itemCode"/>
        </resultMap>



    <!--  다음에 insert형 ITEM_CODE 조회-->
    <select id="selectNextItemCode" resultType="int">
        SELECT IFNULL(MAX(ITEM_CODE), 0) + 1 FROM shop_item;
    </select>


    <!--  상품 등록  -->
    <insert id="insertItem">
        INSERT INTO SHOP_ITEM (
            ITEM_CODE
            , ITEM_NAME
            , ITEM_PRICE
            , ITEM_INTRO
            , CATE_CODE
        )VALUES(
            #{itemCode}
            , #{itemName} <!-- 빈값채우기 위해 넘어온 vo.getName() 호출 / #{}  : 빈갑-->
            , #{itemPrice}
            , #{itemIntro}
            , #{cateCode}
        )
    </insert>

    <!--  상품  이미지 정보 등록  -->
                    <!-- <foreach> -->
                    <!--  collection="" : 무엇을 반복할래?   item="" : collection에서 꺼낸 하나의 객체  -->
                    <!-- "imgList" : itemVo.getImgList -->
                    <!-- item="img"  : imgVo-->
                    <!-- separator="," : '반복 할때 마다 쉼표넣겠습니다' 자동으로 반복끝나면 쉼표 안붙음 (),(),() -->
    <insert id="insertImgs">
        INSERT INTO ITEM_IMAGE(
            ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , IS_MAIN
            , ITEM_CODE
        ) VALUES
             <foreach collection="imgList" item="ImgVo" separator=",">
                (
                    #{ImgVo.originFileName}
                    , #{ImgVo.attachedFileName}
                    , #{ImgVo.isMain}
                    , #{ImgVo.itemCode}
                )
             </foreach>
    </insert>

    <!-- "구매 목록 조회" (관리자용)   -->
    <!--  관리자 메뉴>구매이력 클릭시 "구매 목록 조회" (관리자용) -->
    <!-- "selectBuyList" 는 buyMapper 에 있지만 파일이 달라서 중복이름 써도 됨!   -->
    <!-- 작다 <:  &lt;   less than  DATE_FORMAT(BUY_DATE,'%Y-%m-%d') <= '2024-02-01'    -->
    <!--  크다 >: &gt; great than   -->
    <!--  '% #{searchValue} %'  검색할때 searchValue 포함된 데이터 모두 조회한다는 뜻 -->
    <!--    #{searchValue} -> searchBuyVo.getSearchValue -->
    <select id="selectBuyList" resultMap="buyMapper.resultBuy">
        SELECT
            BUY_CODE
            , MEMBER_ID
            , BUY_PRICE
            , BUY_DATE
        FROM SHOP_BUY
        WHERE 1=1
        <if test='searchValue!=null and !searchValue.equals("")'>
            AND ${searchBuyType} LIKE CONCAT ('%', #{searchValue}, '%')
        </if>
        <if test='fromDate!=null and !fromDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE,'%Y-%m-%d') &gt;= #{fromDate}
        </if>
        <if test='toDate!=null and !toDate.equals("")'>
            AND DATE_FORMAT(BUY_DATE,'%Y-%m-%d') &lt;= #{toDate}
        </if>
        ORDER BY BUY_DATE DESC
    </select>

<!--  내가 푼거  -->
    <select id="selectBuyDetailList" resultMap="buyMapper.resultBuy">
        SELECT
        DETAIL.ITEM_CODE
        , ITEM_NAME
        , ATTACHED_FILE_NAME
        , BUY_CNT
        , TOTAL_PRICE
        , BUY_DATE
        , BUY_PRICE
        , DETAIL.BUY_CODE
        , BUY.MEMBER_ID
        FROM buy_detail DETAIL
        INNER JOIN shop_item ITEM
        ON DETAIL.ITEM_CODE = ITEM.ITEM_CODE
        INNER JOIN item_image IMAGE
        ON DETAIL.ITEM_CODE = IMAGE.ITEM_CODE
        INNER JOIN shop_buy BUY
        ON DETAIL.BUY_CODE = BUY.BUY_CODE
        WHERE IS_MAIN= 'Y'
        AND BUY.BUY_CODE=#{buyCode};
    </select>

    <!-- 구매목록 클릭시 구매상세 내역 확인-->
    <select id="selectBuyDetail" resultMap="buyMapper.resultBuy">
        SELECT
        DETAIL.BUY_CODE
        , BUY_CNT
        , MEMBER_ID
        , BUY_PRICE
        , BUY_DATE
        , TOTAL_PRICE
        , ITEM_NAME
        , ATTACHED_FILE_NAME
        FROM shop_buy BUY
        INNER JOIN buy_detail DETAIL
        ON BUY.BUY_CODE=DETAIL.BUY_CODE
        INNER JOIN shop_item ITEM
        ON ITEM.ITEM_CODE=DETAIL.ITEM_CODE
        INNER JOIN item_image IMG
        ON IMG.ITEM_CODE= ITEM.ITEM_CODE
        WHERE IS_MAIN='Y'
        AND BUY.BUY_CODE=#{buyCode}
    </select>

<!--  상품 목록 조회하기 내가 푼거 -->
    <select id="selectItemInfo" resultMap="itemMapper.resultItem">
        SELECT
            ITEM_CODE
            , ITEM_NAME
            , ITEM_STOCK
            , ITEM_STATUS
        FROM shop_item
        ORDER BY ITEM_CODE DESC
    </select>

    <!--  상품 기본 정보 조회하기  내가 푼거-->
    <select id="selectItemInfoDetail" resultMap="itemMapper.resultItem">
        SELECT
            ITEM.ITEM_CODE
            , CATE_CODE
            , ITEM_NAME
            , ITEM_STOCK
            , ATTACHED_FILE_NAME
        FROM SHOP_ITEM ITEM
        INNER JOIN ITEM_IMAGE IMG
        ON IMG.ITEM_CODE= ITEM.ITEM_CODE
        WHERE ITEM.ITEM_CODE= #{itemCode}

    </select>






    <!-- 상품 정보 변경 화면에서  상품 목록 조회  쌤 풀이-->
    <select id="selectItemList" resultMap="itemMapper.resultItem">
        SELECT
        ITEM_CODE
        , ITEM_NAME
        , ITEM_STOCK
        , ITEM_STATUS
        , CASE
            WHEN ITEM_STATUS=1 THEN '준비중'
            WHEN ITEM_STATUS=2 THEN '판매중'
            ELSE '매진'
            END AS STR_STATUS
        FROM shop_item
    </select>


    <!--  상품 기본 정보 조회하기  쌤 풀이-->
    <select id="selectItemDetail" resultMap="itemMapper.resultItem">
        SELECT
            CATE_NAME
            , CATE.CATE_CODE
            , ITEM_NAME
            , ITEM_STOCK
            , ITEM_STATUS
            , ITEM.ITEM_CODE
            , ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , IMG_CODE
            , IS_MAIN
        FROM shop_item ITEM
        INNER JOIN item_category CATE
        ON ITEM.CATE_CODE = CATE.CATE_CODE
        INNER JOIN item_image IMG
        ON ITEM.ITEM_CODE= IMG.ITEM_CODE
        WHERE ITEM.ITEM_CODE=#{itemCode}
    </select>

    <select id="selectImg">
        SELECT
        IMG_CODE
        , ORIGIN_FILE_NAME
        , ATTACHED_FILE_NAME
        , IS_MAIN
        FROM ITEM_IMAGE
        WHERE IMG_CODE =#{imgCode}
    </select>

    <update id="updateItem">
        UPDATE SHOP_ITEM
        SET
            ITEM_NAME =#{itemName}
            , ITEM_STOCK=#{itemStock}
            , ITEM_STATUS=#{itemStatus}
            , CATE_CODE=#{cateCode}
        WHERE ITEM_CODE=#{itemCode}
    </update>

</mapper>































